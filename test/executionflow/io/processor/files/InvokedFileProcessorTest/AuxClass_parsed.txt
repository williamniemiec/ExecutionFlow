package org.apache.commons.io.serialization;
import java.io.Closeable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.After;
import org.junit.Before;
public class ClosingBase {
private final List<Closeable> toClose = new ArrayList<>();
@executionflow.runtime.CollectCalls protected <T extends Closeable> T willClose(final T t) {
toClose.add(t);
return t;
}
@Before public void setup() throws IOException {
toClose.clear();
}
@After public void cleanup() {
java.util.Iterator<Closeable> _e225c77350149003d71f8dbe883c5bda = executionflow.io.processor.invoked.trgeneration.IteratorExtractor.extractIterator(toClose);
while (_e225c77350149003d71f8dbe883c5bda.hasNext()) {
Closeable c = _e225c77350149003d71f8dbe883c5bda.next();
try {int _e37d1171a5c1b4099b37cfa89e3c578=0;
c.close();
}
catch (final IOException ignored) {
}
;
}
}
}
