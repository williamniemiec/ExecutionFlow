package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _1c61d27dc1175a974561e219ccc81f10=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _274e587e23be0417c5f5f4a1186d5802=0;
try {int _4f01ea5196a87af58ea18069e732f955=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _32374d9803426d41c71f9b388a95fb4f=0;
try {int _46b317e080f337f640fb0baf625d7b08=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _38c0073b10ac8e468a4fdce6db3a674a=0;
case 'Á':int _776cb3a89670680b2101ff0c679e8933=0;
case 'À':int _66ad6889123e8e0c21ac34cc48c45ec2=0;
case 'Ã':int _26b902ff84b519ecc278707223136b90=0;
case 'Â':int _9f302cfc3ef1ee7852b5624d59e9e8bd=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _ceff14362d213e7c3f6274e11471d8f2=0;
case 'È':int _549b6436f0c3b63090d340227972c5f=0;
case 'Ê':int _a23efde1ba7a970739f22d3e34c6e972=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _712f39c4504beb1b1907df95fddfce9a=0;
case 'Í':int _6da1a74414d7e566934e5f0ebcf2464c=0;
case 'Î':int _5dc0e36915a04a2410d3718ccb5d00cf=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _1c03c1c1299a8574d15ac23a43c8e697=0;
case 'Ó':int _9d88b7201e55b65e6ff0e5ea3d2687c4=0;
case 'Ô':int _d851c5723f9443f0e7d77e269d0120a2=0;
case 'Õ':int _bf47682fe3e6d771599c2b995d8fa12e=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _acc1b48e55bedc9f37118460355cd737=0;
case 'Ù':int _96ee9f7c591a253b95688ef37da87915=0;
case 'Û':int _c7a52f3172f89b49abae71a250ac04b2=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _3af24e9ade3d3862690486c0af9cd937=0;
a++;
b--;
}
while (b != 0);
return a;
// a = a + b;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _e11a12dc37d87d0e0c599bce04693139=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _68c77bafcc485de7cf77197483357e93=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _866a1a5fdad1310e7021bf8c4dd67d6d=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _644217351c00851cc057556f6c30265f=0;
num = 10;
}
return num;
}
}
