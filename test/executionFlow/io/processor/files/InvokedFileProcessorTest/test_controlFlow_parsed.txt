package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _edf21740194283e72958b4d51dbbd9e8=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _7f7613c8cc06a7b6fb584a5836d6c9e8=0;
try {int _af188cfa210fa46549fb7440297d8a7=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _ef06e947fd0ad531ecdcca348d2fc064=0;
try {int _276a6f8d57cd039c6f6bc238879bc0fe=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _c3a640e5cfe131fef6c3e2512c4a9209=0;
case 'Á':int _34ea9bf460a39f1a88145ad218eeb50a=0;
case 'À':int _390a9d0ed6a24a2c1956074e7fa03a32=0;
case 'Ã':int _29b6c38a175cb0d1da76d6a352b14df0=0;
case 'Â':int _b3f667f576eadd08dd09bb77bfaa141f=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _2eaad0fb203db5f819601ab8df55012=0;
case 'È':int _9c5c90ca941020aa70c6ff984536152d=0;
case 'Ê':int _65c58a9f714569a3f517b8f8f57bf323=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _6fe79bcd3e2ff66139bbadaf387929f6=0;
case 'Í':int _30b64930e6a1c1d13867dc9c929376e2=0;
case 'Î':int _44dbc22e919923f18fb5035737f04ac8=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _3937ec5be936f8ce05b7dffb64364fb1=0;
case 'Ó':int _66eb5b9600995e47058f9d4d0f342e6a=0;
case 'Ô':int _ae794e7b8c92fa0f72a3492a6b94a3b=0;
case 'Õ':int _dc33f2a0ad6ada7f0598e9b55f332e31=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _42840a950e3ea081e31a0610c1fe006b=0;
case 'Ù':int _fb164ccd1bfa9ab7223df6623d581d18=0;
case 'Û':int _e70d83e8d306e0ffcc352a129502dbce=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) return b;
if (b == 0) return a;
do {int _316dd79afa42ca3716a3791478cc85b8=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) a--;
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) return true;
else {int _3973a667fe3cf5f146c0b9bbde143132=0; return false;}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) n = 1;
do {int _d314e3edc19602cb56110cae427d25f4=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _7875c3834e9129ad7316e977b3d5646f=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _56a7e5f92a5c6aa7591a8e4b6eaca76f=0;
num = 10;
}
return num;
}
}
