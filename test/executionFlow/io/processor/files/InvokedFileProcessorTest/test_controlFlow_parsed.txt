package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _98a6799706974996818df8699cb9b174=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _e57a3aa47da9f06352edd2c1470dd112=0;
try {int _f92f72867edd7f34b20f13e367cf5de4=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _83b25639bb4ce61e99878382ba13f466=0;
try {int _48789a00e429176b190ba14a9fa116b8=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _58e80547b9e1e915a7b9cc91f28080fe=0;
case 'Á':int _193e9f1deb6b3cb41c4c4b0f7b29ac6=0;
case 'À':int _a3130924451b300ca20f10be8f409a46=0;
case 'Ã':int _fbf738d5354599142220552f85b578a5=0;
case 'Â':int _2055da6257dd74ab31cad98b42a2dfae=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _555ce0b9a3cd843181b4c6c054b60452=0;
case 'È':int _3000bfb744eeb056b10e468dd6e839b6=0;
case 'Ê':int _1cc8657fa69019f7a096ed99025efed3=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _4ff541463edcb7dc40baa44aeb67c9d7=0;
case 'Í':int _97fa7089e4769a0831e701d52e3090d5=0;
case 'Î':int _2f162f1616b7906c4c00e30b645e787c=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _33c4b9edc3fd1116eed8bf290f6d4972=0;
case 'Ó':int _9f13c4083e4fef17733d12ecc70a8c5e=0;
case 'Ô':int _a99ef1d71c2832986998f9e2718df7d5=0;
case 'Õ':int _fe0147214e723d32f9fb15fdcdb12509=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _d036489ae1742e494ff451497ec76c55=0;
case 'Ù':int _ca10f0109a141653ab4155d795ac2d21=0;
case 'Û':int _e0b944c1c53baab1dcabb30acb253d5a=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _ca646591a9c989e986076f9258ffe44e=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _2225450af41de35c7fb7613f9bde6dbb=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _73ddfcebaa5e22d7af21c77a54481c3b=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _68e240523382aede43182b29168190b3=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _f162c237495fc3c0cb0b1539788985dd=0;
num = 10;
}
return num;
}
}
