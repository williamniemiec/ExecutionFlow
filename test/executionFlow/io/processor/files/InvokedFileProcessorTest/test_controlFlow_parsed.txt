package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _e753a088345fc31aa55bf9db9461580c=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _d6994e2635e02064a28a27368ea0c38f=0;
 try {int _a9ee2d6a43a78da78d02f5e3955117f8=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
 f.delete();
}
 catch (IOException e) {
 return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _215f1ba50a95545406fa7d2eee2429c2=0;
 try {int _e9938fc9c083785bff8482ad153eaa12=0;
 throw new IOException();
}
 catch (IOException e) {
 return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _d77dffe9351d8b163e46973c59fb586c=0;
case 'Á':int _76049006e50bb7c720f9edf2712cd7d3=0;
case 'À':int _9337cd8d1d65d1408b60baa461a04834=0;
case 'Ã':int _d406d86613d24a3b7eb22885ffe9eb94=0;
case 'Â':int _707bb6aa6b832a23ee7cff0bf62e0c8c=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _d08e24127184cf204a0243062ec02777=0;
case 'È':int _1fc4bb8771c28a5bb60715d8e89c834b=0;
case 'Ê':int _46bbf414dcbe0221b61add4ac70b25e9=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _4581450300eb06e0952cc346c737db12=0;
case 'Í':int _2ec0ddf0c5392313454e3c58874209f4=0;
case 'Î':int _6ef02c84fe053599e7acbbf7dc1ca4fe=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _bb7309eca621476c505a47374957ea7a=0;
case 'Ó':int _4f80542af0d489e02f75e96a83e06189=0;
case 'Ô':int _b675b536c189befe3560c0dd21960f1e=0;
case 'Õ':int _c599f8c1259a51b75129b43aa460817=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _45901899e42e7c9d15a55c736faa1689=0;
case 'Ù':int _8cee4b88672aad7521e4e706920b9cdd=0;
case 'Û':int _2e1812f3a8ab9a8fd5c3b8e4512bb8bb=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _67361a82f4d5093937b306091d613732=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _a4dac6a993b1ec436f27130cd2ee9ed0=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _4f3215c720117568a40756c892d6316=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _ed8a889bd4b9715942c7a75ce90a6e1=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _28547398f12db203c459824cf632959e=0;
num = 10;
}
return num;
}
}


