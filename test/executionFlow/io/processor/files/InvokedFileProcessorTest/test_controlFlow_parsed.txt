package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _ba23e9957eb5f49edc0d3449dd888ebe=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _c5d4b7e4728ed184f8014b98b442ce03=0;
try {int _eba0f04ea1067dd7a6eb773c76feb7c7=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _67d7ccb2b33659697ef4cfdccdb99f7e=0;
try {int _2460d77efe88b1bdd8db3a5326447da2=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _a7cf70ea7263ad66d0c2e87d306653db=0;
case 'Á':int _703d4688a64d7e56bf6de01d389d7ead=0;
case 'À':int _c5f15d79cf75978b066e226fdfbd6ad1=0;
case 'Ã':int _228e1195efd7c6313eaf13c7528ad62f=0;
case 'Â':int _c39bd9f8b86fc687f0c6ff7b326779b1=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _c70042f3fb3a3799ae82bcb4175d132d=0;
case 'È':int _b7cabd6ed1780c28cc5c1274231f7d2a=0;
case 'Ê':int _710a134267beff97cc6656f69e8fdb3e=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _2f63ea0cd9f59afec49c0e7457f7397e=0;
case 'Í':int _1f88320ca853554e160590148e1f4ef3=0;
case 'Î':int _d483c5ba2d3ea1f8fee66ccc0fa9a0b9=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _6ecefe61a24531c7f3f994fd0c48936e=0;
case 'Ó':int _995cd51e5e87abe6a45ccc12bff7aaa1=0;
case 'Ô':int _c83fe39ad8e4049fb0b0ee595215ffa1=0;
case 'Õ':int _20fb40310efabc8f36a61b3336e0dcc4=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _2dcf1df1e7e491153f619ee7aa74afc0=0;
case 'Ù':int _cc110bbb8e7bfcc6664b8350ce4c6a73=0;
case 'Û':int _79054a3f95c393e442be9b0f441083ec=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _bac256749e104ac27602157d78e4a9e=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _3a2356e52198e154bffabf1592563bb6=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _95ae41c12cce21896a1a86891c7d8772=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _61797023c47341a6dd2d2c2c83299d81=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _4b2e68d4d0c30284d5336168a7cf770d=0;
num = 10;
}
return num;
}
}
