package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _f42337b53a1bb05c6f4029f8afd91261=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _5d3d86e599f0d41a9a13780927235a1f=0;
try {int _67b368a27a555bd0f270f7513cbc0374=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _89fa015b4f12d3e724716aafd45688d=0;
try {int _1c0d8f641b48cf301172411176aca5a=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _ee4eaa1d63a60a898a5816588aabe65a=0;
case 'Á':int _468210cff9e7c514f96048011fc8afc2=0;
case 'À':int _1c05c56dadf8056b2db063ee43c11f73=0;
case 'Ã':int _da7eb7fd31b086fc7a8421ef3e5d9a55=0;
case 'Â':int _1af395906ccd06e9ffd53c05bd073747=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _98ce2c3507d67095d267918f9c8a4f7a=0;
case 'È':int _4363aef192230ca2d6c8ddcae7eeb0eb=0;
case 'Ê':int _92f3c642f4a1458dc4b18f7fa65c1400=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _fb4e974902ef3efe5a7e4a4a9c0e53be=0;
case 'Í':int _de79efa5e8584aedd498500bfaaf7cb9=0;
case 'Î':int _c9a13e29bd733c781e744106ce12bcef=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _39f22e3543cfab431848551821383f49=0;
case 'Ó':int _58168cbd4c45d9e67a166cc67440ea7d=0;
case 'Ô':int _330a3c2e8c205e446a74c5700354e76b=0;
case 'Õ':int _a2441baba2f6086cad6b181232bf1319=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _67f164e9c75616f1b05d1fe7ea7fd613=0;
case 'Ù':int _55576f9be1af4322aa1c6027ae2c8882=0;
case 'Û':int _791ca9c14b6404799f65661e06a514dc=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) return b;
if (b == 0) return a;
do {int _edc100237f24458754ebdd7ba29dc89d=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) a--;
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) return true;
else {int _d072f96b260809744cf7719d41bc24a4=0; return false;}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) n = 1;
do {int _1e55d08ce59c42f1bab943518167f676=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _5c998fbafecec2b0276811aa1bc62f8c=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _590ad3c6ce3582c6bb75fef95a0045e7=0;
num = 10;
}
return num;
}
}
