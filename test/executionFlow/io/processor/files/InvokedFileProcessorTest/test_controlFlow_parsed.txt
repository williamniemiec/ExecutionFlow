package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _687d0bbac31ada90aaa9745848f0dc9=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _9876d132faee9ba4944120ffd47dd3ce=0;
try {int _971dbf8d725b2bfb7cd97aafe1fa1485=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _ab6ef6b9831cde1d5133ca3ecf1bb107=0;
try {int _df2d6b720eb21f6a371296ed075721=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _4d026c344faf08ab840b0d7286971665=0;
case 'Á':int _74b36502d45c4c40ec10ec212de03262=0;
case 'À':int _453fb411664e6b0b2269387404ce2c59=0;
case 'Ã':int _629145436067a5e7d66f75b76cf5133=0;
case 'Â':int _6412153b62bd84b6c9d151f7f167714c=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}break;
case 'É':int _16647f82f3c1f340ae8a3d569b510b40=0;
case 'È':int _90c54ff32601e05e55984a910314696c=0;
case 'Ê':int _54323de6ec255efb0fe093193880b0d4=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ì':int _cf67baf469379a0a7aeaf7a10cb784f5=0;
case 'Í':int _851d78d8cb904011ef69f4aad27c04df=0;
case 'Î':int _bc95315440516c1ce35966ab57c8d9b2=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ò':int _c0857fc913efcd6e78ea66d9ff67c612=0;
case 'Ó':int _6fdc7bacdb23dc70fd76f86864f9197a=0;
case 'Ô':int _db43a7c713897ef38b48bed389ec28c0=0;
case 'Õ':int _6db63f17b412b01449ab3458526ba34c=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ú':int _68a31dc897ab90db06b0004fc0e87c3=0;
case 'Ù':int _600bc9e25351bec9fd982575a182678f=0;
case 'Û':int _7f6734ca8c9de7f006974ac63e1dfd6d=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}break;
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _27db5bf2ccde4335d288cb788c66f7c3=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _e3838e04e844cb3913675d1263ceb69b=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _d5a32392a60660493bf6959f4e155008=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _29c3e882339f0050bb0970eabb4155c=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _7345a4eb6afe071a0ee1ca805068f831=0;
num = 10;
}
return num;
}
}
