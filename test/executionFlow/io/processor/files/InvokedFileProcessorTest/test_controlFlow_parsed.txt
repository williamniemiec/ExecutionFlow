package examples.controlFlow;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
public class TestClass_ControlFlow{
@executionFlow.runtime.CollectCalls public String ifElseMethod(int num){
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _3d66dbd0fe165b3dec24b7efcebf8129=0;
response = "Number "+num;
}
return response;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_try(){
File f = new File("tmp");
FileWriter fw;int _b54ab302a750ee1ed5404a0a7f4f4248=0;
try {int _1bf10d82854d7be3e49a637b1e44cbc7=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@executionFlow.runtime.CollectCalls public boolean tryCatchMethod_catch(){
File f = new File("tmp");
FileWriter fw;int _aec0d1635be7bac4a98ca3257b60af87=0;
try {int _5c2b60df28d35dbc6e9b5e890383b4ed=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@executionFlow.runtime.CollectCalls public char switchCaseMethod(char letter){
letter = Character.toUpperCase(letter);
switch (letter) {
case '÷':int _42d808b8401c22447d9687ddc322dfa5=0;
case 'Á':int _c1fd01e9f6cc1e8d543d47567b9393d4=0;
case 'À':int _7357d43d07fb504688b4650390a82cf4=0;
case 'Ã':int _ee3bcb40437a00574dd6bf570f432425=0;
case 'Â':int _821d67f8f111207a8783e1dee6c31560=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}
case 'É':int _4816cb09a7a43ad0048cd8564fbb4c3a=0;
case 'È':int _1f8b0eca16c1a7aaa86a7566d08c045a=0;
case 'Ê':int _46f9574e6fc5d07f34e5714d1d59a79=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}
case 'Ì':int _6f3aab9983fc7e92eff995d2fdc3ca81=0;
case 'Í':int _d6c0aa132a90045515fd922390ff0954=0;
case 'Î':int _f15afd3bb87a606c042d20ea8f40a89a=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}
case 'Ò':int _f1d4783e1ca23e83d1775e318839085=0;
case 'Ó':int _b6848d93a42c1954472c0afd8613d757=0;
case 'Ô':int _bca00b47dfdc695728daf60cd8123886=0;
case 'Õ':int _46b5f47e087530030410a5d49ad36d82=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}
case 'Ú':int _9e18e93ebe3823306b713bb459a2de31=0;
case 'Ù':int _901625970cd2b03202ef2e2904972237=0;
case 'Û':int _f9b1193b95b3034b0861fc3abe8defea=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}
}
return letter;
}
@executionFlow.runtime.CollectCalls public int doWhileMethod(int a, int b){
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _735c595966d8cfc201a3270e09651f4=0;
a++;
b--;
}
while (b != 0);
return a;
}
@executionFlow.runtime.CollectCalls public int inlineWhile(int a){
while (a > 0) {
a--;
}
return a;
}
@executionFlow.runtime.CollectCalls public boolean inlineIfElse(int n){
if (n > 0) {
return true;
}
else {int _e7a3841de388eac5edee576c8cda48fc=0;
return false;
}
}
@executionFlow.runtime.CollectCalls public int inlineDoWhile(int n){
if (n <= 0) {
n = 1;
}
do {int _539a72386fecc6b5586ac381b701d324=0;
n--;
}
while (n > 0);
return n;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine(int num){
if (num > 0) {
num *= 0;
}
else {int _e2a64f32667de524a781f7be04bd241d=0;
num = 10;
}
return num;
}
@executionFlow.runtime.CollectCalls public int ifElseSameLine2(int num){
if (num > 0) {
num *= 0;
}
else {int _17d6774c77d291dd0359fc89ed91bebb=0;
num = 10;
}
return num;
}
}
