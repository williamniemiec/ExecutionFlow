public class Foo {
@wniemiec.executionflow.runtime.CollectCalls public static int countTotalArguments(Object... args) {
int i = 2;
int k;int _0=0;
k=0;
while (k<args.length) {int _0=0;
k++;
if (Boolean.parseBoolean("True")) {continue;}
k++;
}
return k;
}
@wniemiec.executionflow.runtime.CollectCalls public static int countTotalArguments2(Object... args) {
int total = 0;
int i=0;
while (i<args.length) {int _0=0;
if (i == 0) {
i++;
if (Boolean.parseBoolean("True")) {continue;}
}
total = i;
i++;
}
return total;
}
@wniemiec.executionflow.runtime.CollectCalls public int doWhileMethod(int a, int b) {
if (a == 0) {
return b;
}
if (b == 0) {
return a;
}
do {int _0=0;
a++;
b--;
}
while (b != 0);
return a;
}
@wniemiec.executionflow.runtime.CollectCalls public int inlineWhile(int a) {
while (a > 0) {int _0=0;
a--;
}
return a;
}
@wniemiec.executionflow.runtime.CollectCalls public int inlineDoWhile(int n)	{
if (n <= 0) {
n = 1;
}
do {int _0=0;
n--;
}
while (n > 0);
return n;
}
@wniemiec.executionflow.runtime.CollectCalls public String ifElseMethod(int num) {
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _0=0;
response = "Number "+num;
}
return response;
}
@wniemiec.executionflow.runtime.CollectCalls public boolean inlineIfElse(int n) {
if (n > 0) {
return true;
}
else {int _0=0;
return false;
}
}
@wniemiec.executionflow.runtime.CollectCalls public int ifElseSameLine2(int num)	{
if (num > 0) {
num *= 0;
}
else {int _0=0;
num = 10;
}
return num;
}
@wniemiec.executionflow.runtime.CollectCalls public String ifElseMethod2(int num) {
if (num < 0) {
return "Negative value";
}
String response = "";
if (num == 0) {
response = "Number zero";
}
else if (num == 1) {
response = "Number one";
}
else {int _0=0;
response = "Number "+num;
}
return response;
}
@wniemiec.executionflow.runtime.CollectCalls public void m1(int num){
someMethod();
}
@wniemiec.executionflow.runtime.CollectCalls private void m2(int num){
someMethod();
}
@wniemiec.executionflow.runtime.CollectCalls public static void m3(int num){
someMethod();
}
@wniemiec.executionflow.runtime.CollectCalls public synchronized void m4(int num){
someMethod();
}
@wniemiec.executionflow.runtime.CollectCalls public char switchCaseMethod(char letter) {
letter = Character.toUpperCase(letter);
switch (letter) {
case 'Á':int _0=0;
case 'À':int _0=0;
case 'Ã':int _0=0;
case 'Â':int _0=0;
letter = 'A';
if (Boolean.parseBoolean("True")) {break;}break;
case 'É':int _0=0;
case 'È':int _0=0;
case 'Ê':int _0=0;
letter = 'E';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ì':int _0=0;
case 'Í':int _0=0;
case 'Î':int _0=0;
letter = 'I';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ò':int _0=0;
case 'Ó':int _0=0;
case 'Ô':int _0=0;
case 'Õ':int _0=0;
letter = 'O';
if (Boolean.parseBoolean("True")) {break;}break;
case 'Ú':int _0=0;
case 'Ù':int _0=0;
case 'Û':int _0=0;
letter = 'U';
if (Boolean.parseBoolean("True")) {break;}break;
}
return letter;
}
@wniemiec.executionflow.runtime.CollectCalls public boolean tryCatchMethod_try() {
File f = new File("tmp");
FileWriter fw;int _0=0;
try {int _0=0;
fw = new FileWriter(f);
fw.write('x');
fw.close();
f.delete();
}
catch (IOException e) {
return false;
}
return true;
}
@wniemiec.executionflow.runtime.CollectCalls public boolean tryCatchMethod_catch() {
File f = new File("tmp");
FileWriter fw;int _0=0;
try {int _0=0;
throw new IOException();
}
catch (IOException e) {
return false;
}
}
@wniemiec.executionflow.runtime.CollectCalls public static void test3(int x, int y, String k) {
x = 0;
while (x < 3) {int _0=0;
x++;
}
x = 3;
}
@wniemiec.executionflow.runtime.CollectCalls private static void someMethod() {
}
}
